generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id Int @id @default(autoincrement())

  name String
  surname String
  email String

  classes ClassesOnTeachers[]
  assignments AssignmentsOnTeachers[]

  @@unique([email])
}

model Class {
  id Int @id @default(autoincrement())

  teachers ClassesOnTeachers[]
  students Student[]

}

model Student {
  id Int @id @default(autoincrement())
  
  username String
  name String
  surname String

  email String
  hash String

  class Class @relation(fields: [classId], references: [id], onUpdate: Cascade)
  classId Int

  assignments AssignmentsOnStudents[]

  @@unique([email, username])
}

model ClassesOnTeachers {
  id Int @id @default(autoincrement())

  teacher Teacher @relation(fields: [teacherId], references: [id], onUpdate: Cascade)
  teacherId Int

  class Class @relation(fields: [classId], references: [id], onUpdate: Cascade)
  classId Int

}

model Assignment {
  id Int @id @default(autoincrement())

  name String
  slug String
  description String

  start DateTime
  deadline DateTime
  updated_at DateTime @updatedAt

  pinned Boolean @default(false)
  grade Int? @default(dbgenerated("NULL"))

  teachers AssignmentsOnTeachers[]

  status AssignmentStatus @default(NOT_STARTED)

  students AssignmentsOnStudents[]

  @@unique([slug])
}

model AssignmentsOnStudents {
  id Int @id @default(autoincrement())

  assignment Assignment @relation(fields: [assignmentId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  assignmentId Int

  student Student @relation(fields: [studentId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  studentId Int
}

model AssignmentsOnTeachers {
  id Int @id @default(autoincrement())

  assignment Assignment @relation(fields: [assignmentId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  assignmentId Int

  teacher Teacher @relation(fields: [teacherId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  teacherId Int
}

enum AssignmentStatus {
  NOT_STARTED
  IN_PROGRESS
  REVIEWING
  COMPLETED
  GRADED
}

